name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Build & Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v1

      - name: Build via Cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --all-features --verbose --locked

      - name: Test via Cargo
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --all-features --verbose --locked

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run Clippy via Cargo
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --verbose --locked -- -D warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt

      - name: Run Rustfmt via Cargo
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check --all --verbose
